@{
    var chatUser = ViewBag.ChatUser as Users.Models.User;
}

<!DOCTYPE html>
<html>
<head>
    <title>Chat</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
    <style>
        #messagesList {
            border: 1px solid #ccc;
            height: 300px;
            overflow-y: scroll;
            padding: 10px;
        }

        .message {
            margin: 5px 0;
            padding: 5px;
            border-radius: 5px;
        }

            .message.sent {
                background-color: #d1e7dd;
                text-align: right;
            }

            .message.received {
                background-color: #f8d7da;
                text-align: left;
            }
    </style>
</head>
<body>
    <h2>Chat with @chatUser?.FirstName @chatUser?.LastName</h2>

    <div id="messagesList"></div>
    <input type="text" id="messageInput" />
    <button id="sendButton">Send</button>

    <script>
        const connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
        const currentUserEmail = '@User.Identity.Name';
        const chatUserEmail = '@chatUser?.Email';

        connection.start().then(function () {
            console.log("SignalR connected");

            // Join group
            if (chatUserEmail) {
                connection.invoke("JoinGroup", currentUserEmail, chatUserEmail).catch(function (err) {
                    return console.error(err.toString());
                });
            }
        }).catch(function (err) {
            return console.error(err.toString());
        });

        connection.on("ReceiveMessage", function (fromUser, message) {
            const msg = document.createElement("div");
            msg.classList.add("message");
            msg.classList.add(fromUser === currentUserEmail ? "sent" : "received");
            msg.textContent = `${fromUser}: ${message}`;
            document.getElementById("messagesList").appendChild(msg);
        });

        document.getElementById("sendButton").addEventListener("click", function (event) {
            const message = document.getElementById("messageInput").value;
            connection.invoke("SendMessage", currentUserEmail, chatUserEmail, message).catch(function (err) {
                return console.error(err.toString());
            });
            event.preventDefault();
        });

        window.onbeforeunload = function () {
            if (chatUserEmail) {
                connection.invoke("LeaveGroup", currentUserEmail, chatUserEmail).catch(function (err) {
                    return console.error(err.toString());
                });
            }
        };
    </script>
</body>
</html>
